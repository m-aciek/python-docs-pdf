on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag from CPython repository'
        required: true
        default: 'v3.14.0'
      skip-tag-check:
        description: 'Allow running build for non-latest patch tags (useful for testing)'
        required: true
        type: boolean
        default: false
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure input tag is latest patch for its major.minor
        run: |
          input_tag="${{ github.event.inputs.tag }}"
          major_minor=$(echo "$input_tag" | grep -oE '^v[0-9]+\.[0-9]+')
          latest_patch=$(git ls-remote --tags https://github.com/python/cpython.git | \
            awk '{print $2}' | grep -E "refs/tags/${major_minor}\\.([0-9]+([abrc][0-9]+)?)$" | \
            sed 's|refs/tags/||' | sed -E 's/([0-9]+)$/\1z0/' | sort -V | sed -E 's/z0$//' | tail -n1)
          if [ "$input_tag" != "$latest_patch" ]; then
            echo "Provided tag $input_tag is not the latest patch for $major_minor (latest: $latest_patch)." >&2
            exit 1
          fi
        if: ${{ github.event.inputs.skip-tag-check == false }}
      - uses: actions/setup-python@master
        with:
          python-version: 3
      - uses: actions/checkout@master
        with:
          repository: python/cpython
          ref: ${{ github.event.inputs.tag }}
      - run: make venv
        working-directory: ./Doc
      - run: sudo apt-get update
      - run: sudo apt-get install -y latexmk texlive-xetex fonts-freefont-otf xindy
      - run: make dist-pdf
        working-directory: ./Doc
      - name: Strip leading v from tag
        id: tag-no-v
        run: |
          echo "tag_no_v=${GITHUB_EVENT_INPUTS_TAG#v}" >> $GITHUB_OUTPUT
        env:
          GITHUB_EVENT_INPUTS_TAG: ${{ github.event.inputs.tag }}
      - uses: actions/upload-artifact@master
        with:
          name: ${{ github.event.inputs.tag }}-docs-pdf-a4.zip
          path: ./Doc/dist/python-${{ steps.tag-no-v.outputs.tag_no_v }}-docs-pdf-a4.zip
      - uses: actions/upload-artifact@master
        with:
          name: ${{ github.event.inputs.tag }}-docs-pdf-a4.tar.bz2
          path: ./Doc/dist/python-${{ steps.tag-no-v.outputs.tag_no_v }}-docs-pdf-a4.tar.bz2
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
      - name: Set major_minor variable
        id: majorminor
        run: |
          input_tag="${{ github.event.inputs.tag }}"
          major_minor=$(echo "$input_tag" | grep -oE '^[vV]([0-9]+\.[0-9]+)')
          major_minor=${major_minor#v}
          echo "major_minor=$major_minor" >> $GITHUB_OUTPUT
      - name: Copy generated archives to gh-pages
        run: |
          mkdir -p gh-pages/3
          cp ./Doc/dist/python-${{ steps.tag-no-v.outputs.tag_no_v }}-docs-pdf-a4.zip gh-pages/3/python-${{ steps.majorminor.outputs.major_minor }}-docs-pdf-a4.zip
          cp ./Doc/dist/python-${{ steps.tag-no-v.outputs.tag_no_v }}-docs-pdf-a4.tar.bz2 gh-pages/3/python-${{ steps.majorminor.outputs.major_minor }}-docs-pdf-a4.tar.bz2
      - name: Commit generated archives
        run: |
          cd gh-pages
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add 3/python-${{ steps.majorminor.outputs.major_minor }}-docs-pdf-a4.zip 3/python-${{ steps.majorminor.outputs.major_minor }}-docs-pdf-a4.tar.bz2
          git commit -m "Update PDF archives for ${{ steps.majorminor.outputs.major_minor }}"
      - name: Push commit
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: gh-pages
